<phpunit
	bootstrap="tests/bootstrap.php"
	backupGlobals="false"
	colors="true"
	convertErrorsToExceptions="true"
	convertNoticesToExceptions="true"
	convertWarningsToExceptions="true"
	cacheResultFile="./tests/.phpunit.result.cache"
	>

	<php>
		<const name="WP_TESTS_MULTISITE" value="1" />
		<const name="WP_ENVIRONMENT_TYPE" value="local" />
	</php>

	<testsuites>
		<testsuite name="wporg-two-factor">
			<directory prefix="test-" suffix=".php">
				./tests/
			</directory>
		</testsuite>
	</testsuites>

	<!--
	  == Because this is a security plugin, the goal for coverage is 100% for code that is testable and worth
	  == testing. It's not worth refactoring gymnastics to make everything testable, though, and some things
	  == just aren't important. @codeCoverageIgnore should be used liberally to indicate when a function is
	  == not worth testing, because that ensures that the coverage % remains meaningful and only reflects
	  == the code that we're trying to test.
	  -->
	<coverage processUncoveredFiles="false">
		<include>
			<directory>./providers</directory>
			<file>wporg-two-factor.php</file>
			<file>class-encrypted-totp-provider.php</file>
			<file>settings/settings.php</file>
			<file>settings/rest-api.php</file>
		</include>

		<report>
			<html outputDirectory="./tests/coverage" />
		</report>
	</coverage>
</phpunit>
